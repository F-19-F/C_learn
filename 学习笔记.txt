动态库--将编译的目标文件打包成库，（windows后缀为dll,linux后缀为so,mac上为dylib)，优点：
方便修改 
    gcc中将源文件打包成动态库命令：
1.gcc -fPIC(可选，创建位置无关代码) -c 源文件 -o 输出文件 //此处是需要打包成库的源文件
2.gcc -shared(把目标文件转化为动态库) 目标文件 -o lib******.so(其他系统需要改为对应后缀，且名字必须以lib开头，不然gcc没法识别) 
//生成动态库的命令
3.gcc -c 源文件 -o 输出文件  //此处是编译成可执行文件的源文件
4.gcc 目标文件夹 -L/(此处是编译时动态库所在文件夹) -l(之后时动态库lib后的内容) -o 输出文件 //输出为可执行文件

静态库--在编译时直接将所有依赖的源文件编译成目标文件，然后直接链接，运行时不需要再弄很多库文件，优点：只需要一个可执行文件便可以运行